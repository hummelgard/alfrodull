gzip_comp_level  1;
gzip_min_length  1000;
gzip_proxied     expired no-cache no-store private auth;
gzip_types       text/plain application/x-javascript text/xml text/css application/xml;
upstream gunicorn_app_server {

  # fail_timeout=0 means we always retry an upstream even if it failed
  # to return a good HTTP response

  # for UNIX domain socket setups
  server unix:/srv/http/app/run/gunicorn.socket fail_timeout=0;

  # for a TCP configuration
  # server 192.168.0.7:8000 fail_timeout=0;
}

log_format basic '$status $body_bytes_sent '
                           '[$time_local] '
                           '$remote_addr - $remote_user '
                           '"$request" '
                           '"$http_referer"';

#server {
#  # if no Host match, close the connection to prevent host spoofing
#  listen 83 default_server;
#  return 444;
#}

server {
  listen 83;
  server_name _ 
  #server_name alfrodull.com alfrodull.hummelgard.com lab.hummelgard.com 192.168.1.83;

  client_body_buffer_size 10K;
  client_header_buffer_size 1k;
  client_max_body_size 8m;
  large_client_header_buffers 2 1k;

  client_body_timeout 120;
  client_header_timeout 120;
  keepalive_timeout 120;
  send_timeout 10;

  root /srv/http/app/htdocs;
  error_log /srv/http/app/log/error.log;
  access_log /srv/http/app/log/access.log basic gzip;
  access_log off;
  location / {
    try_files $uri @context;
  }
  location @context {
    #include uwsgi_params;
    #uwsgi_pass unix:/srv/http/app/run/app.uwsgi.sock;

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # enable this if and only if you use HTTPS
    # proxy_set_header X-Forwarded-Proto https;

    proxy_set_header Host $http_host;
    # we don't want nginx trying to do something clever with
    # redirects, we set the Host: header above already.
    proxy_redirect off;

	  
    proxy_buffering off;
    #if websocket are use, turn off buffers.

    proxy_pass http://gunicorn_app_server;

  }
  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root /srv/http/app/htdocs/static;
    }
}
